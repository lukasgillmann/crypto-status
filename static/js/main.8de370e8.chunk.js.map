{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","_ref","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","_jsx","className","children","Spin","Cryptocurrencies","simplified","data","cryptosList","isFetching","cryptos","setCryptos","useState","searchTerm","setSearchTerm","useEffect","_cryptosList$data","_cryptosList$data2","coins","filteredData","filter","item","name","toLowerCase","includes","_jsxs","_Fragment","Input","placeholder","onChange","e","target","value","Row","gutter","map","currency","Col","xs","sm","lg","Link","to","uuid","Card","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","Text","Title","Typography","Option","Select","News","_data$data","_data$data$coins","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","indexOf","news","i","_news$image","_news$image$thumbnail","_news$provider$","_news$provider$$image","_news$provider$$image2","_news$provider$2","href","rel","level","image","thumbnail","contentUrl","alt","description","length","substring","Avatar","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","Statistic","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","screenSize","setScreenSize","undefined","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","Button","onClick","MenuOutlined","Menu","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Exchanges","LineChart","_coinHistory$data5","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","_coinHistory$data","_coinHistory$data$his","history","_coinHistory$data2","push","_coinHistory$data3","_coinHistory$data3$hi","_coinHistory$data4","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","Line","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","_cryptoDetails$allTim","_cryptoDetails$allTim2","_cryptoDetails$supply","_cryptoDetails$supply2","_cryptoDetails$supply3","_cryptoDetails$supply4","_cryptoDetails$supply5","_data$data2","_data$data3","_cryptoDetails$links","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","_ref2","HTMLReactParser","links","link","type","App","Layout","Switch","Route","exact","path","style","color","textAlign","Space","configureStore","reducer","ReactDOM","render","React","StrictMode","Router","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.8de370e8.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Note: Change v1 to v2 on rapid api\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n\n    // Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n    }),\n\n    // Note: To access this endpoint you need premium plan\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.uuid}\n          >\n\n            {/* Note: Change currency.id to currency.uuid  */}\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n  'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\nimport News from './News';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n        <Title level={3}><Link to=\"/news\">Show more</Link></Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">CryptoStatus</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Exchanges = () => {\n  const { isFetching } = useGetExchangesQuery();\n // Note: To access this endpoint you need premium plan\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {/* {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.uuid}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.uuid}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))} */}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${cryptoDetails?.allTimeHigh?.price && millify(cryptoDetails?.allTimeHigh?.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails?.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails?.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails?.supply?.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${cryptoDetails?.supply?.circulating && millify(cryptoDetails?.supply?.circulating)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\n          <Link to=\"/\">\n            Cryptoverse Inc.\n          </Link> <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}